/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./cartridges/int_aurus_sfra/cartridge/client/default/js/aurusCheckout.js":
/*!********************************************************************************!*\
  !*** ./cartridges/int_aurus_sfra/cartridge/client/default/js/aurusCheckout.js ***!
  \********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var formHelpers = __webpack_require__(/*! base/checkout/formErrors */ \"../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/checkout/formErrors.js\");\nvar scrollAnimate = __webpack_require__(/*! base/components/scrollAnimate */ \"../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/components/scrollAnimate.js\");\n\n// IE 11 does not support ‘startsWith’ with strings.\n// Adding this prototype so that it supports the method.\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function(searchString, position) { // eslint-disable-line\n        position = position || 0; // eslint-disable-line\n        return this.indexOf(searchString, position) === position;\n    };\n}\n\nfunction getAurusPayPalSession(params) {\n    return new Promise(function (resolve, reject) {\n    $.ajax({\n        url: 'AurusPay-GetSession',\n        type: 'get',\n        data: {\n            paypal: 'true'\n        },\n        success: function (data) {\n            if (!data.error) {\n                var payLoad = JSON.parse(data.session);\n                //window.console.log('PayPal Session Res',data);\n                var sessionId = payLoad.SessionResponse.SessionId;\n                resolve(sessionId); // Resolve with only SessionId\n                window.console.log('PayPal Session payload sessionId--->>>>',sessionId);\n            } else {\n                window.console.log('Error retrieving Aurus Pay iFrame url and session');\n                reject(new Error('Error retrieving Aurus Pay iFrame url and session'));\n            }\n        }\n    });\n});\n\n}\n\n// function getBillerToken(params) {\n//     $.ajax({\n//         url: 'AurusPay-GetBillerToken',\n//         type: 'get',\n//         success: function (data) {\n//             if (!data.error) {\n//                 var payLoad = JSON.parse(data.session);\n//                 window.console.log('AurusPay GetBillerToken--->>>>',payLoad);\n//             } else {\n//                 window.console.log('Error retrieving Aurus Pay PayPal token');\n//             }\n//         }\n//     });\n// }\n\n// Changed By me\nfunction onclickPaypalButton() {\n    paypal.Button.render({\n\n        env: 'sandbox',\n        commit: true,\n\n        style: {\n            label: 'paypal',\n            size: 'responsive',\n            color: 'gold',\n            shape: 'rect',\n            tagline: false,\n            height: 46\n        },\n        payment: function() {\n            return getBillerToken().then(function (payLoad) {\n                window.console.log('EcomToken--------------', payLoad.GetBillerTokenResponse.EcomToken);\n                return payLoad.GetBillerTokenResponse.EcomToken;\n            });\n        },\n\n        onAuthorize: function(data, actions) {\n            window.console.log('onAuthorize called---->>>>>>>>');\n      //getSessionToken call to get OTT of paypal request\n            getPayPalSessionToken();\n            return actions.redirect();\n        },\n\n        onCancel: function(data, actions) {\n            //\treturn actions.redirect();\n        }\n\n    }, '#aurus-paypal-containerId');\n}\n\nfunction getBillerToken() {\n     return new Promise(function (resolve, reject) {\n        $.ajax({\n            url: 'AurusPay-GetBillerToken',\n            type: 'get',\n            success: function (data) {\n                if (!data.error) {\n                    var payLoad = JSON.parse(data.session);\n                    window.console.log('AurusPay GetBillerToken--->>>>', payLoad);\n                    // window.console.log('EcomToken---->>>>>', payLoad.GetBillerTokenResponse.EcomToken);\n\n                    // // Extract the approval URL\n                    // var approvalLink = payLoad.GetBillerTokenResponse.WalletObject.links.find(link => link.rel === 'approval_url');\n                    // if (approvalLink) {\n                    //     var approvalUrl = approvalLink.href;\n                    //     window.console.log('Approval URL:', approvalUrl);\n                    // } else {\n                    //     window.console.log('Approval URL not found');\n                    // }\n\n                    resolve(payLoad);\n                } else {\n                    window.console.log('Error retrieving Aurus Pay PayPal token');\n                    reject(new Error('Error retrieving Aurus Pay PayPal token'));\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                reject(new Error('AJAX request failed: ' + textStatus + ', ' + errorThrown));\n            }\n        });\n   });\n}\n//this function is for to get OTT \nfunction getPayPalSessionToken(){\n    window.console.log('get session token for paypal');\n    // $.ajax({\n    //     url: 'AurusPay-GetSessionToken',\n    //     type: 'get',\n    //     success: function (data) {\n    //         if (!data.error) {\n    //             var payLoad = JSON.parse(data.session);\n    //             window.console.log('AurusPay GetSessionTokenRequest--->>>>',payLoad);\n    //         } else {\n    //             window.console.log('Error retrieving Aurus Pay PayPal GetSessionToken for OTT');\n    //         }\n    //     }\n    // });\n}\n\n/**\n* Ajax call to get iframe url and attach to existing element\n* @param {string} storedPaymentId uuid and internal id for payment instrument\n*/\nfunction getAurusSession(storedPaymentId) {\n    var ccId = '';\n    if (storedPaymentId !== undefined) {\n        ccId = storedPaymentId.length > 0 ? storedPaymentId : '';\n    }\n    $.ajax({\n        url: 'AurusPay-GetSession',\n        type: 'get',\n        data: {\n            ccId: ccId\n        },\n        success: function (data) {\n            if (!data.error) {\n                var payLoad = JSON.parse(data.session);\n                 window.console.log('getAurusSession payLoad',payLoad);\n                $('#frame_carddetails').attr('src', payLoad.SessionResponse.IFrameUrl);\n            } else {\n                window.console.log('Error retrieving Aurus Pay iFrame url and session');\n            }\n        }\n    });\n}\n\n/**\n* Merchant needs to get this URL by doing substring of Aurus Iframe Url received in Session API.\n* URL example: var aurusURL = 'https://uat48.auruspay.com';\n* @returns {string} Aurus iframe Origin\n*/\nfunction getIframeUrl() {\n    var aurusURL;\n    if ($('#frame_carddetails').length) {\n        var aurusLongURL = $('#frame_carddetails').attr('src');\n        aurusURL = 'https://' + aurusLongURL.split('/')[2];\n    }\n    return aurusURL;\n}\n\n/**\n* This function initiates Ajax call within the Aurus iframe to retrieve the one time token (OTT)\n* This method needs to be called onSubmit button click present on Merchant's page.\n*/\nfunction getCardToken() {\n    var aurusURL = getIframeUrl();\n    var frame = document.getElementById('frame_carddetails');\n    frame.contentWindow.postMessage('aurus-token', aurusURL);\n}\n\n// /**\n// * This function initiates Ajax call within the Aurus iframe to retrieve the one time token (OTT)\n// * This method needs to be called onSubmit button click present on Merchant's page.\n// * @param {JSON} JSONdata the response data from the OTT request within the iFrame\n// */\n// function responseHandler(JSONdata) {\n//     window.console.log('responseHandler called----->>>');\n//     try {\n//         var $msg = $('#token-error');\n//         // Handle the Error Response here\n//         if (Number(JSONdata.response_code) > 0) {\n//             $msg.text('ERROR: ' + JSONdata.response_code + ' - ' + JSONdata.response_text);\n//             $('#buttonSubmit').prop('disabled', false);\n//         } else { // Handle the success response here like below:\n//             window.console.log('responseHandler called SUCCESS----->>>');\n//             $msg.text('SUCCESS');\n//             // var $form = $('#dwfrm_billing');\n\n//             // $form.append($('<input type=\"hidden\" name=\"card_token\">').val(JSONdata.card_token));\n//             // $form.append($('<input type=\"hidden\" name=\"card_holder_name\">').val(JSONdata.card_holder_name));\n\n//             $('#cardType').val(JSONdata.card_type);\n//             var maskedCardNum = 'dwfrm_billing_creditCardFields_cardNumber=' + JSONdata.masked_card_num + '&';\n//             var expiryDate = 'dwfrm_billing_creditCardFields_expirationDate=' + JSONdata.card_expiry_date + '&';\n//             var resCode = 'dwfrm_billing_creditCardFields_responseCode=' + JSONdata.response_code + '&';\n//             var resText = 'dwfrm_billing_creditCardFields_responseText=' + JSONdata.response_text + '&';\n//             var ott = 'dwfrm_billing_creditCardFields_ott=' + JSONdata.one_time_token;\n//             formHelpers.clearPreviousErrors('.payment-form');\n//             window.console.log('responseHandler called SUCCESS----->>>',ott);\n//             window.console.log('responseHandler called expiryDate----->>>',expiryDate);\n//             window.console.log('responseHandler called resCode----->>>',resCode);\n//             window.console.log('responseHandler called resText----->>>',resText);\n//             var shippingFormData = $('.single-shipping .shipping-form').serialize();\n\n//             $('body').trigger('checkout:serializeShipping', {\n//                 form: $('.single-shipping .shipping-form'),\n//                 data: shippingFormData,\n//                 callback: function (data) {\n//                     shippingFormData = data;\n//                 }\n//             });\n\n//             var billingAddressForm = $('#dwfrm_billing .billing-address-block :input').serialize();\n\n//             $('body').trigger('checkout:serializeBilling', {\n//                 form: $('#dwfrm_billing .billing-address-block'),\n//                 data: billingAddressForm,\n//                 callback: function (data) {\n//                     if (data) {\n//                         billingAddressForm = data;\n//                     }\n//                 }\n//             });\n\n//             var contactInfoForm = $('#dwfrm_billing .contact-info-block :input').serialize();\n\n//             $('body').trigger('checkout:serializeBilling', {\n//                 form: $('#dwfrm_billing .contact-info-block'),\n//                 data: contactInfoForm,\n//                 callback: function (data) {\n//                     if (data) {\n//                         contactInfoForm = data;\n//                     }\n//                 }\n//             });\n\n//             var activeTabId = $('.tab-pane.active').attr('id');\n\n//             var paymentInfoSelector = '#dwfrm_billing .' + activeTabId + ' .payment-form-fields :input';\n//             var paymentInfoForm = $(paymentInfoSelector).serialize();\n//             paymentInfoForm = paymentInfoForm + '&' + maskedCardNum + expiryDate + resCode + resText + ott;\n\n//             var paymentForm = shippingFormData + '&' + billingAddressForm + '&' + contactInfoForm + '&' + paymentInfoForm;\n//             window.console.log('paymentForm====>>',paymentForm);\n//             // disable the next:Place Order button here\n//             $('body').trigger('checkout:disableButton', '.next-step-button button');\n//             var defer = $.Deferred();// eslint-disable-line\n//             window.console.log('defer' ,defer);\n//             var test= $('#dwfrm_billing').attr('action');\n//             window.console.log('test...',test);\n//             // Ajax call to server side\n//             $.ajax({\n//                 url: $('#dwfrm_billing').attr('action'),\n//                 method: 'POST',\n//                 data: paymentForm,\n//                 success: function (data) {\n//                     // enable the next:Place Order button here\n//                     $('body').trigger('checkout:enableButton', '.next-step-button button');\n//                     // look for field validation errors\n//                     if (data.error) {\n//                         if (data.fieldErrors.length) {\n//                             data.fieldErrors.forEach(function (error) {\n//                                 if (Object.keys(error).length) {\n//                                     formHelpers.loadFormErrors('.payment-form', error);\n//                                 }\n//                             });\n//                         }\n\n//                         if (data.serverErrors.length) {\n//                             data.serverErrors.forEach(function (error) {\n//                                 $('.error-message').show();\n//                                 $('.error-message-text').text(error);\n//                                 scrollAnimate($('.error-message'));\n//                             });\n//                         }\n\n//                         if (data.cartError) {\n//                             window.location.href = data.redirectUrl;\n//                         }\n\n//                         defer.reject();\n//                     } else {\n//                         //\n//                         // Populate the Address Summary\n//                         //\n//                         $('body').trigger('checkout:updateCheckoutView',\n//                             { order: data.order, customer: data.customer });\n\n//                         if (data.renderedPaymentInstruments) {\n//                             $('.stored-payments').empty().html(\n//                                 data.renderedPaymentInstruments\n//                             );\n//                         }\n\n//                         if (data.customer.registeredUser\n//                             && data.customer.customerPaymentInstruments.length\n//                         ) {\n//                             $('.cancel-new-payment').removeClass('checkout-hidden');\n//                         }\n\n//                         scrollAnimate();\n//                         defer.resolve(data);\n//                     }\n//                 },\n//                 error: function (err) {\n//                     // enable the next:Place Order button here\n//                     $('body').trigger('checkout:enableButton', '.next-step-button button');\n//                     if (err.responseJSON && err.responseJSON.redirectUrl) {\n//                         window.location.href = err.responseJSON.redirectUrl;\n//                     }\n//                 }\n//             });\n//         }\n//     } catch (error) {\n//         window.console.log('ERROR: ' + error);\n//     }\n// }\n\n// This will get triggered when Aurus will post the OTT response on Merchant's page\n\nwindow.addEventListener('message', function (event) {\n    var aurusURL = getIframeUrl();\n    var data = event.data;\n    var splt;\n    var json;\n    if (event.origin !== aurusURL) {\n        window.console.log('Wrong Origin...');\n        return;\n    }\n    //  else if (data.startsWith('response')) {\n    //     splt = data.split('=');\n    //     json = JSON.parse(splt[1]);\n    //     //responseHandler(json);\n    // } else if (data.startsWith('enablePlaceOrder')) {\n    //     splt = data.split('=');\n    //     json = JSON.parse(splt[1]);\n    //     // TODO: if failure disable place order button\n    //     // var enableBtn = json ? true : false;\n    //     // enablePlaceOrderBtn(enableBtn);\n    else if (data.startsWith('iframeHeight')) {\n         splt = data.split('=');\n         json = splt[1];\n         console.log(\"Iframe height:\"+json); \n         $(\"#frame_carddetails\").css(\"height\",json);\n    }\n});\n\nmodule.exports = {\n    methods: {\n        getCardToken: getCardToken,\n        getAurusSession: getAurusSession,\n        getAurusPayPalSession: getAurusPayPalSession,\n        getBillerToken: getBillerToken,\n        onclickPaypalButton:onclickPaypalButton\n    }\n};\n\n\n//# sourceURL=webpack://int_aurus_sfra/./cartridges/int_aurus_sfra/cartridge/client/default/js/aurusCheckout.js?");

/***/ }),

/***/ "../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/checkout/formErrors.js":
/*!*************************************************************************************************************************************!*\
  !*** ../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/checkout/formErrors.js ***!
  \*************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar scrollAnimate = __webpack_require__(/*! ../components/scrollAnimate */ \"../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/components/scrollAnimate.js\");\n\n/**\n * Display error messages and highlight form fields with errors.\n * @param {string} parentSelector - the form which contains the fields\n * @param {Object} fieldErrors - the fields with errors\n */\nfunction loadFormErrors(parentSelector, fieldErrors) { // eslint-disable-line\n    // Display error messages and highlight form fields with errors.\n    $.each(fieldErrors, function (attr) {\n        $('*[name=' + attr + ']', parentSelector)\n            .addClass('is-invalid')\n            .siblings('.invalid-feedback')\n            .html(fieldErrors[attr]);\n    });\n    // Animate to top of form that has errors\n    scrollAnimate($(parentSelector));\n}\n\n/**\n * Clear the form errors.\n * @param {string} parentSelector - the parent form selector.\n */\nfunction clearPreviousErrors(parentSelector) {\n    $(parentSelector).find('.form-control.is-invalid').removeClass('is-invalid');\n    $('.error-message').hide();\n}\n\nmodule.exports = {\n    loadFormErrors: loadFormErrors,\n    clearPreviousErrors: clearPreviousErrors\n};\n\n\n//# sourceURL=webpack://int_aurus_sfra/../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/checkout/formErrors.js?");

/***/ }),

/***/ "../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/components/scrollAnimate.js":
/*!******************************************************************************************************************************************!*\
  !*** ../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/components/scrollAnimate.js ***!
  \******************************************************************************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = function (element) {\n    var position = element && element.length ? element.offset().top : 0;\n    $('html, body').animate({\n        scrollTop: position\n    }, 500);\n    if (!element) {\n        $('.logo-home').focus();\n    }\n};\n\n\n//# sourceURL=webpack://int_aurus_sfra/../storefront-reference-architecture-master/cartridges/app_storefront_base/cartridge/client/default/js/components/scrollAnimate.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./cartridges/int_aurus_sfra/cartridge/client/default/js/aurusCheckout.js");
/******/ 	
/******/ })()
;